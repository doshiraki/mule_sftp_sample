<?xml version="1.0" encoding="UTF-8"?>
<project>
    <modelVersion>4.0.0</modelVersion>
    <packaging>war</packaging>
    <name>test</name>
    <artifactId>test</artifactId>
    <groupId>com.example</groupId>
    <version>1.0.0-SNAPSHOT</version>

    <description>An example Java 8 project using Maven and JUnit 5.x</description>

    <url>https://github.com/example/test</url>

    <licenses>
        <license>
            <name>MIT</name>
            <url>https://spdx.org/licenses/MIT.html</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <organization>
        <name>Example Organization</name>
        <url>http://example.com/</url>
    </organization>

    <scm>
        <url>https://github.com/example/test</url>
        <connection>git@github.com:example/test.git</connection>
        <developerConnection>git@github.com:example/test.git</developerConnection>
    </scm>

    <issueManagement>
        <system>Issues</system>
        <url>https://github.com/example/test/issues</url>
    </issueManagement>

    <ciManagement>
        <system>Pipelines</system>
        <url>https://github.com/example/test/pipelines</url>
    </ciManagement>

    <contributors>
        <contributor>
            <name>Some Contributor</name>
            <email>some.contributor@example.com</email>
            <url>http://example.com/</url>
            <organization>Example Organization</organization>
            <organizationUrl>http://example.com/</organizationUrl>
            <roles>
                <role>scrum-master</role>
            </roles>
            <timezone>Europe/Amsterdam</timezone>
        </contributor>
        <contributor>
            <name>Another Contributor</name>
            <email>another.contributor@example.com</email>
            <url>http://example.com/</url>
            <organization>Example Organization</organization>
            <organizationUrl>http://example.com/</organizationUrl>
            <roles>
                <role>product-owner</role>
            </roles>
            <timezone>Europe/Amsterdam</timezone>
        </contributor>
    </contributors>

    <developers>
        <developer>
            <id>somedev</id>
            <email>some.developer@example.com</email>
            <name>Some Developer</name>
            <organization>Example Organization</organization>
            <organizationUrl>http://example.com/</organizationUrl>
            <roles>
                <role>architect</role>
                <role>developer</role>
            </roles>
            <timezone>Europe/Amsterdam</timezone>
        </developer>
        <developer>
            <id>otherdev</id>
            <email>other.developer@example.com</email>
            <name>Other Developer</name>
            <organization>Example Organization</organization>
            <organizationUrl>http://example.com/</organizationUrl>
            <roles>
                <role>architect</role>
                <role>developer</role>
            </roles>
            <timezone>Europe/Amsterdam</timezone>
        </developer>
    </developers>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <main.class>com.example.test.HelloWorld</main.class>
        <java.version>8</java.version>
        <junit.jupiter.version>5.4.2</junit.jupiter.version>
        <maven.compiler.plugin.version>3.8.0</maven.compiler.plugin.version>
        <maven.jar.plugin.version>3.1.1</maven.jar.plugin.version>
        <maven.surefire.plugin.version>2.22.1</maven.surefire.plugin.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mule</groupId>
            <artifactId>mule-core</artifactId>
            <version>3.7.0</version>
        </dependency>
        <dependency>
            <groupId>org.mule.transports</groupId>
            <artifactId>mule-transport-vm</artifactId>
            <version>3.7.0</version>
        </dependency>
        <!--
        <dependency>
            <groupId>org.mule.transports</groupId>
            <artifactId>mule-transport-file</artifactId>
            <version>3.7.0</version>
        </dependency>
        -->
        <dependency>
            <groupId>org.mule.transports</groupId>
            <artifactId>mule-transport-sftp</artifactId>
            <version>3.7.0</version>
            <exclusions>
                <exclusion>
                    <groupId>com.jcraft</groupId>
                    <artifactId>jsch</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.github.mwiede</groupId>
            <artifactId>jsch</artifactId>
            <version>[0.2,]</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-webapp</artifactId>
            <version>9.0.2.v20130417</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.13.0</version>
            <scope>compile</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>com.theoryinpractise</groupId>
                <artifactId>googleformatter-maven-plugin</artifactId>
                <version>1.7.3</version>
                <executions>
                    <execution>
                        <id>reformat-sources</id>
                        <configuration>
                            <includeStale>false</includeStale>
                            <style>GOOGLE</style>
                            <filterModified>false</filterModified>
                            <skip>false</skip>
                            <fixImports>false</fixImports>
                            <maxLineLength>100</maxLineLength>
                        </configuration>
                        <goals>
                            <goal>format</goal>
                        </goals>
                        <phase>process-sources</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <showWarnings>true</showWarnings>
                    <showDeprecation>true</showDeprecation>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.3</version>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>local.boot.WarEntryPoint</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.7</version>
                <executions>
                    <execution>
                        <id>main-class-placement</id>
                        <phase>prepare-package</phase>
                        <configuration>
                            <target>
                                <move todir="${project.build.directory}/${project.build.finalName}/">
                                    <fileset dir="${project.build.directory}/classes/">
                                        <include name="local/boot/WarEntryPoint.class" />
                                    </fileset>
                                </move>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>delete-lib-dir</id>
                        <phase>initialize</phase>
                        <configuration>
                            <target>
                                <delete dir="${project.build.directory}/lib" />
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.8</version>

                <executions>
                    <execution>
                        <id>lint</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>analyze</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>jetty-classpath</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeGroupIds>org.eclipse.jetty,javax.servlet</includeGroupIds>
                            <excludes>META-INF/ECLIPSEF.*</excludes>
                            <outputDirectory>
                                ${project.build.directory}/${project.build.finalName}
                            </outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                            <excludeScope>provided</excludeScope>
                            <overWriteIfNewer>true</overWriteIfNewer>
                            <overWriteReleases>true</overWriteReleases>
                            <overWriteSnapshots>true</overWriteSnapshots>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>